import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { X, Download } from "lucide-react";
import { motion } from "framer-motion";

export default function CompareGrid({ selectedRooms, onRemoveRoom, onDownloadComparison }) {
  const handleDownload = (room) => {
    const link = document.createElement('a');
    link.href = room.styled_image_url;
    link.download = `styled-room-${room.style_name}-${Date.now()}.jpg`;
    link.click();
  };

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {selectedRooms.map((room, index) => (
        <motion.div
          key={room.id}
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: index * 0.1 }}
        >
          <Card className="overflow-hidden shadow-lg">
            <CardContent className="p-0">
              <div className="relative">
                <img
                  src={room.styled_image_url}
                  alt={room.title}
                  className="w-full h-48 object-cover"
                />
                <Button
                  onClick={() => onRemoveRoom(room.id)}
                  className="absolute top-2 right-2 bg-red-500 hover:bg-red-600 text-white rounded-full p-1 shadow-lg"
                  size="icon"
                >
                  <X className="w-4 h-4" />
                </Button>
                
                <div className="absolute bottom-2 left-2">
                  <Badge className="bg-yellow-500 text-white">
                    {room.style_name.charAt(0).toUpperCase() + room.style_name.slice(1)}
                  </Badge>
                </div>
              </div>
              
              <div className="p-4">
                <h3 className="font-semibold text-gray-900 mb-2">{room.title}</h3>
                <div className="flex gap-2">
                  <Button
                    onClick={() => handleDownload(room)}
                    size="sm"
                    variant="outline"
                    className="flex-1"
                  >
                    <Download className="w-4 h-4 mr-1" />
                    Download
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>
      ))}
      
      {selectedRooms.length < 4 && (
        <Card className="border-2 border-dashed border-gray-200 hover:border-gray-300 transition-colors">
          <CardContent className="p-8 text-center">
            <div className="text-gray-400">
              <div className="w-12 h-12 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                <span className="text-2xl">+</span>
              </div>
              <p className="text-sm">Add another room to compare</p>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}