import React, { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Sparkles, Palette, Wand2 } from "lucide-react";
import { motion } from "framer-motion";

const steps = [
  { icon: Sparkles, title: "Analyzing your room", description: "AI is examining the space and structure" },
  { icon: Palette, title: "Applying style elements", description: "Transforming colors, textures, and furniture" },
  { icon: Wand2, title: "Adding final touches", description: "Perfecting lighting and details" },
];

export default function GenerationProgress({ isGenerating, progress }) {
  const [currentStep, setCurrentStep] = useState(0);

  useEffect(() => {
    if (isGenerating) {
      const interval = setInterval(() => {
        setCurrentStep(prev => (prev + 1) % steps.length);
      }, 2000);
      return () => clearInterval(interval);
    }
  }, [isGenerating]);

  if (!isGenerating) return null;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm"
    >
      <Card className="w-full max-w-md mx-4 glass-effect border-0 shadow-2xl">
        <CardContent className="p-8 text-center">
          <div className="mb-6">
            <motion.div
              key={currentStep}
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              className="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-yellow-400 to-yellow-600 rounded-full flex items-center justify-center shadow-lg"
            >
              {React.createElement(steps[currentStep].icon, { className: "w-8 h-8 text-white" })}
            </motion.div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">{steps[currentStep].title}</h3>
            <p className="text-gray-600">{steps[currentStep].description}</p>
          </div>

          <div className="space-y-3">
            <Progress value={progress} className="h-2" />
            <p className="text-sm text-gray-500">
              {Math.round(progress)}% complete
            </p>
          </div>

          <div className="mt-6 flex justify-center space-x-2">
            {steps.map((_, index) => (
              <div
                key={index}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  index === currentStep ? 'bg-yellow-500' : 'bg-gray-300'
                }`}
              />
            ))}
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}